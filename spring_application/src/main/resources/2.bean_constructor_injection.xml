<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">
		<!-- property file 사용설정 -->
		<context:property-placeholder location="classpath:jdbc.properties"/>
		<!-- 
		빈을 등록하면 applicationContext 초기화시에
		기본생성자를 호출하여 빈객체를 생성하고 id로 등록한다
		 -->
		 <!-- DataSource -->
		<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		 <property name="driverClassName" value="${jdbc.driverClassName}"></property>
		 <property name="url" value="${jdbc.url}"></property>
		 <property name="username" value="${jdbc.username}"></property>
		 <property name="password" value="${jdbc.password}"></property>
		<!-- 생성자를 통해 데이터 주입받는 작업 불가능 : 생성자가 제공이 안되기 때문에  -->
		
		
		</bean>
		 <!-- DAO -->
		 <!-- Constructor Injection(생성자 통한 의존성 객체 주입) -->
		 <!-- 1.참조타입객체 참조값(id)을 setter메소드 인자로 Injection -->
		 <bean id="guestDao" class="com.itwill.guest.GuestDaoImpl">
		 <constructor-arg ref="dataSource" 
		 type="javax.sql.DataSource" index="0"></constructor-arg>
		 </bean>
		 <!-- Service -->
		 <bean id="guestService" class="com.itwill.guest.GuestServiceImpl">
		 <constructor-arg ref="guestDao"></constructor-arg>
		 </bean>
		 
		 <!-- 기본타입데이터를 Constructor 인자로 injection   -->
		<bean id="guest" class="com.itwill.guest.Guest">
		<constructor-arg index="0" value="100" type="int"></constructor-arg>
		<constructor-arg index="1" value="히히" ></constructor-arg>
		<constructor-arg index="2" value="2022/08/24" ></constructor-arg>
		<constructor-arg index="3" value="heehee@naver.com" ></constructor-arg>
		<constructor-arg index="4" value="home" ></constructor-arg>
		<constructor-arg index="5" value="타이틀" ></constructor-arg>
		<constructor-arg index="6" value="내용" ></constructor-arg>
		
		</bean>
</beans>














